# data file for the Fltk User Interface Designer (fluid)
version 1.0300 
i18n_type 1 
i18n_include "gettext.h" 
i18n_function _ 
header_name {.h} 
code_name {.cxx}
decl {\#include <config.h>} {private global
} 

decl {\#include "fl_digi.h"} {private global
} 

decl {\#include "configuration.h"} {private global
} 

decl {\#include "Viewer.h"} {private global
} 

decl {\#include "font_browser.h"} {public global
} 

decl {\#include <FL/Fl_Color_Chooser.H>} {private local
} 

decl {\#include <FL/fl_show_colormap.H>} {private local
} 

Function {selectColorsFonts()} {open return_type void
} {
  code {if (!dlgColorFont)
    make_colorsfonts();
dlgColorFont->show();} {}
} 

Function {choose_color(Fl_Color & c)} {open private return_type void
} {
  code {unsigned char r, g, b;
Fl::get_color(c, r, g, b);
if (fl_color_chooser("Font color", r, g, b))
    c = fl_rgb_color(r, g, b);} {}
} 

Function {adjust_label(Fl_Widget* w)} {open private return_type void
} {
  code {w->labelcolor(fl_contrast(w->labelcolor(), w->color()));} {}
} 

Function {cbRxFontBrowser(Fl_Widget*, void*)} {open private return_type void
} {
  code {Fl_Font font = font_browser->fontNumber();
    int size = font_browser->fontSize();
    Fl_Color color = font_browser->fontColor();

    RxText->textfont(font);
    RxText->textsize(size);
    RxText->textcolor(color);
    RxText->redraw();

    progdefaults.RxFontnbr = font;
    progdefaults.RxFontsize = size;
    progdefaults.RxFontcolor = color;

    ReceiveText->setFont(font);
    ReceiveText->setFontSize(size);
    ReceiveText->setFontColor(progdefaults.RxFontcolor, FTextBase::RECV);

    font_browser->hide();

    progdefaults.changed = true;} {}
} 

Function {cbTxFontBrowser(Fl_Widget*, void*)} {open private return_type void
} {
  code {Fl_Font font = font_browser->fontNumber();
    int size = font_browser->fontSize();
    Fl_Color color = font_browser->fontColor();

    TxText->textfont(font);
    TxText->textsize(size);
    TxText->textcolor(color);
    TxText->redraw();

    progdefaults.TxFontnbr = font;
    progdefaults.TxFontsize = size;
    progdefaults.TxFontcolor = color;

    TransmitText->setFont(font);
    TransmitText->setFontSize(size);
    TransmitText->setFontColor(progdefaults.TxFontcolor, FTextBase::RECV);

    font_browser->hide();

    progdefaults.changed = true;} {}
} 

Function {cbWaterfallFontBrowser(Fl_Widget*, void*)} {open return_type void
} {
  code {Fl_Font fnt = font_browser->fontNumber();
    int size = font_browser->fontSize();

    progdefaults.WaterfallFontnbr = fnt;
    progdefaults.WaterfallFontsize = size;
    progdefaults.changed = true;

    font_browser->hide();} {}
} 

Function {cbViewerFontBrowser(Fl_Widget*, void*)} {open return_type void
} {
  code {progdefaults.ViewerFontnbr = font_browser->fontNumber();
    progdefaults.ViewerFontsize = font_browser->fontSize();
    initViewer();
    progdefaults.changed = true;

    font_browser->hide();} {}
} 

Function {cbFreqControlFontBrowser(Fl_Widget*, void*)} {open return_type void
} {
  code {Fl_Font fnt = font_browser->fontNumber();
    progdefaults.FreqControlFontnbr = fnt;
    progdefaults.changed = true;

    FDdisplay->labelfont(progdefaults.FreqControlFontnbr);
    FDdisplay->redraw();
    qsoFreqDisp1->font(progdefaults.FreqControlFontnbr);
    qsoFreqDisp2->font(progdefaults.FreqControlFontnbr);
    qsoFreqDisp3->font(progdefaults.FreqControlFontnbr);
    qsoFreqDisp1->redraw();
    qsoFreqDisp2->redraw();
    qsoFreqDisp3->redraw();
    
    font_browser->hide();} {}
} 

Function {cbLOGGINGFontBrowser(Fl_Widget*, void*)} {open private return_type void
} {
  code {Fl_Font font = font_browser->fontNumber();
    int size = font_browser->fontSize();
    Fl_Color color = font_browser->fontColor();

    progdefaults.LOGGINGtextfont = font;
    progdefaults.LOGGINGtextsize = size;
    progdefaults.LOGGINGtextcolor = color;

    LOGGINGdisplay->textsize(size);
    LOGGINGdisplay->textcolor(color);
    LOGGINGdisplay->textfont(font);
    LOGGINGdisplay->redraw();
    
    LOGGING_colors_font();

    font_browser->hide();

    progdefaults.changed = true;} {}
} 

Function {cbLOGBOOKFontBrowser(Fl_Widget*, void*)} {open private return_type void
} {
  code {Fl_Font font = font_browser->fontNumber();
    int size = font_browser->fontSize();
    Fl_Color color = font_browser->fontColor();

    progdefaults.LOGBOOKtextfont = font;
    progdefaults.LOGBOOKtextsize = size;
    progdefaults.LOGBOOKtextcolor = color;

    LOGBOOKdisplay->textsize(size);
    LOGBOOKdisplay->textcolor(color);
    LOGBOOKdisplay->textfont(font);
    LOGBOOKdisplay->redraw();
    
    LOGBOOK_colors_font();

    font_browser->hide();

    progdefaults.changed = true;} {}
} 

Function {make_colorsfonts()} {open
} {
  code {font_browser = new Font_Browser;} {}
  Fl_Window dlgColorFont {
    label {Colors and Fonts} open
    xywh {589 79 375 220} type Double
    code0 {dlgColorFont->xclass(PACKAGE_TARNAME);} visible
  } {
    Fl_Button btnClrFntClose {
      label Close
      callback {o->window()->hide();}
      xywh {296 192 75 25}
    }
    Fl_Tabs tabsColors {open
      xywh {0 5 375 185}
    } {
      Fl_Group {} {
        label Disp open selected
        xywh {0 30 375 155}
      } {
        Fl_Group {} {open
          xywh {3 34 370 87} box ENGRAVED_FRAME
        } {
          Fl_Box FDdisplay {
            label {14070.150}
            xywh {70 38 235 45} box DOWN_BOX color 55 labelfont 4 labelsize 40
            code0 {o->color(fl_rgb_color(progdefaults.FDbackground.R,progdefaults.FDbackground.G,progdefaults.FDbackground.B));}
            code1 {o->labelcolor(fl_rgb_color(progdefaults.FDforeground.R,progdefaults.FDforeground.G,progdefaults.FDforeground.B));}
            code2 {o->labelfont(progdefaults.FreqControlFontnbr);}
          }
          Fl_Button btn_freq_control_font {
            label Font
            callback {font_browser->fontNumber(progdefaults.FreqControlFontnbr);
    font_browser->fontSize(14);
    font_browser->fontColor(FL_FOREGROUND_COLOR);
    font_browser->fontFilter(Font_Browser::FIXED_WIDTH);
    font_browser->fontFilter(Font_Browser::ALL_TYPES);
    font_browser->callback(cbFreqControlFontBrowser);
font_browser->show();}
            xywh {13 89 80 24}
          }
          Fl_Button btnBackgroundColor {
            label {Bg Color}
            callback {uchar r, g, b;
    r = progdefaults.FDbackground.R;
    g = progdefaults.FDbackground.G;
    b = progdefaults.FDbackground.B;

    if (!fl_color_chooser("Background", r, g, b))
        return;

    progdefaults.FDbackground.R = r;
    progdefaults.FDbackground.G = g;
    progdefaults.FDbackground.B = b;
    
    FDdisplay->color(fl_rgb_color(r,g,b));
    FDdisplay->redraw();
    
    if (qsoFreqDisp) {
        qsoFreqDisp->SetONOFFCOLOR(
          fl_rgb_color(	progdefaults.FDforeground.R,
                        progdefaults.FDforeground.G,
                        progdefaults.FDforeground.B),
          fl_rgb_color(	progdefaults.FDbackground.R,
                        progdefaults.FDbackground.G,
                        progdefaults.FDbackground.B));
        qsoFreqDisp->redraw();
    }

    progdefaults.changed = true;}
            xywh {103 89 80 24}
          }
          Fl_Button btnForegroundColor {
            label {Digit Color}
            callback {uchar r, g, b;
    r = progdefaults.FDforeground.R;
    g = progdefaults.FDforeground.G;
    b = progdefaults.FDforeground.B;

    if (!fl_color_chooser("Foreground", r, g, b))
        return;

    progdefaults.FDforeground.R = r;
    progdefaults.FDforeground.G = g;
    progdefaults.FDforeground.B = b;
    
    FDdisplay->labelcolor(fl_rgb_color(r,g,b));
    FDdisplay->redraw();
    
    if (qsoFreqDisp) {
        qsoFreqDisp->SetONOFFCOLOR(
          fl_rgb_color(	progdefaults.FDforeground.R,
                        progdefaults.FDforeground.G,
                        progdefaults.FDforeground.B),
          fl_rgb_color(	progdefaults.FDbackground.R,
                        progdefaults.FDbackground.G,
                        progdefaults.FDbackground.B));
        qsoFreqDisp->redraw();
    }

    progdefaults.changed = true;}
            xywh {193 89 80 24}
          }
          Fl_Button btnFD_SystemColor {
            label {Sys Colors}
            callback {uchar r, g, b;
    Fl_Color clr = FL_BACKGROUND2_COLOR;

    Fl::get_color(clr, r, g, b);

    progdefaults.FDbackground.R = r;
    progdefaults.FDbackground.G = g;
    progdefaults.FDbackground.B = b;
   
    FDdisplay->color(clr);
    
    clr = FL_FOREGROUND_COLOR;
    Fl::get_color(clr, r, g, b);
    
    FDdisplay->labelcolor(clr);
    FDdisplay->redraw();
    
    progdefaults.FDforeground.R = r;
    progdefaults.FDforeground.G = g;
    progdefaults.FDforeground.B = b;

    if (qsoFreqDisp) {
        qsoFreqDisp->SetONOFFCOLOR(
          fl_rgb_color(	progdefaults.FDforeground.R,
                        progdefaults.FDforeground.G,
                        progdefaults.FDforeground.B),
          fl_rgb_color(	progdefaults.FDbackground.R,
                        progdefaults.FDbackground.G,
                        progdefaults.FDbackground.B));
        qsoFreqDisp->redraw();
    }
         
    progdefaults.changed = true;}
            xywh {284 89 80 24}
          }
        }
      }
      Fl_Group {} {
        label F_keys open
        xywh {5 30 365 156} hide
      } {
        Fl_Check_Button btnUseGroupColors {
          label {Use colored buttons}
          callback {progdefaults.useGroupColors = o->value();
    colorize_macros();
    progdefaults.changed = true;}
          xywh {10 40 165 21} down_box DOWN_BOX
          code0 {btnUseGroupColors->value(progdefaults.useGroupColors);}
        }
        Fl_Button btnGroup1 {
          label {Group 1}
          callback {uchar r, g, b;
    r = progdefaults.btnGroup1.R;
    g = progdefaults.btnGroup1.G;
    b = progdefaults.btnGroup1.B;

    if (fl_color_chooser("Group 1", r, g, b) == 0)
        return;
    progdefaults.btnGroup1.R = r;
    progdefaults.btnGroup1.G = g;
    progdefaults.btnGroup1.B = b;
    o->color(fl_rgb_color(r,g,b));
    colorize_macros();
    
    progdefaults.changed = true;}
          tooltip {Background color for Function key group 1} xywh {10 72 75 20}
          code0 {btnGroup1->color(fl_rgb_color(progdefaults.btnGroup1.R, progdefaults.btnGroup1.G,progdefaults.btnGroup1.B));}
          code1 {btnGroup1->labelcolor(fl_rgb_color(progdefaults.btnFkeyTextColor.R, progdefaults.btnFkeyTextColor.R, progdefaults.btnFkeyTextColor.R));}
        }
        Fl_Button btnGroup2 {
          label {Group 2}
          callback {uchar r, g, b;
    r = progdefaults.btnGroup2.R;
    g = progdefaults.btnGroup2.G;
    b = progdefaults.btnGroup2.B;

    if (fl_color_chooser("Group 2", r, g, b) == 0)
        return;
    progdefaults.btnGroup2.R = r;
    progdefaults.btnGroup2.G = g;
    progdefaults.btnGroup2.B = b;
    o->color(fl_rgb_color(r,g,b));
    colorize_macros();

    progdefaults.changed = true;}
          tooltip {Background color for Function key group 2} xywh {101 72 75 20}
          code0 {btnGroup2->color(fl_rgb_color(progdefaults.btnGroup2.R, progdefaults.btnGroup2.G,progdefaults.btnGroup2.B));}
          code1 {btnGroup2->labelcolor(fl_rgb_color(progdefaults.btnFkeyTextColor.R, progdefaults.btnFkeyTextColor.R, progdefaults.btnFkeyTextColor.R));}
        }
        Fl_Button btnGroup3 {
          label {Group 3}
          callback {uchar r, g, b;
    r = progdefaults.btnGroup3.R;
    g = progdefaults.btnGroup3.G;
    b = progdefaults.btnGroup3.B;

    if (fl_color_chooser("Group 3", r, g, b) == 0)
        return;
    progdefaults.btnGroup3.R = r;
    progdefaults.btnGroup3.G = g;
    progdefaults.btnGroup3.B = b;
    o->color(fl_rgb_color(r,g,b));

    colorize_macros();
    progdefaults.changed = true;}
          tooltip {Background color for Function key group 3} xywh {193 72 75 20}
          code0 {btnGroup3->color(fl_rgb_color(progdefaults.btnGroup3.R, progdefaults.btnGroup3.G,progdefaults.btnGroup3.B));}
          code1 {btnGroup3->labelcolor(fl_rgb_color(progdefaults.btnFkeyTextColor.R, progdefaults.btnFkeyTextColor.R, progdefaults.btnFkeyTextColor.R));}
        }
        Fl_Button btnFkeyTextColor {
          label {Label text}
          callback {uchar r, g, b;
    r = progdefaults.btnFkeyTextColor.R;
    g = progdefaults.btnFkeyTextColor.G;
    b = progdefaults.btnFkeyTextColor.B;

    if (fl_color_chooser("Fkey Text", r, g, b) == 0)
        return;

    progdefaults.btnFkeyTextColor.R = r;
    progdefaults.btnFkeyTextColor.G = g;
    progdefaults.btnFkeyTextColor.B = b;
    o->color(fl_rgb_color(r,g,b));
    adjust_label(o);
    btnGroup1->labelcolor(fl_rgb_color(r,g,b));
    btnGroup2->labelcolor(fl_rgb_color(r,g,b));
    btnGroup3->labelcolor(fl_rgb_color(r,g,b));
    btnGroup1->redraw_label();
    btnGroup2->redraw_label();
    btnGroup3->redraw_label();
    progdefaults.changed = true;
    colorize_macros();}
          xywh {193 40 75 21}
          code0 {btnFkeyTextColor->color(fl_rgb_color(progdefaults.btnFkeyTextColor.R, progdefaults.btnFkeyTextColor.G, progdefaults.btnFkeyTextColor.B));}
          code1 {adjust_label(btnFkeyTextColor);}
        }
        Fl_Button btnFkeyDEfaults {
          label Defaults
          callback {uchar r, g, b;
    Fl_Color clr;

    r = 80; g = 144; b = 144;
    clr = fl_rgb_color(r,g,b);
    btnGroup1->color(clr);
    progdefaults.btnGroup1.R = r;
    progdefaults.btnGroup1.G = g;
    progdefaults.btnGroup1.B = b;

    r = 144; g = 80; b = 80;
    clr = fl_rgb_color(r,g,b);
    btnGroup2->color(clr);
    progdefaults.btnGroup2.R = r;
    progdefaults.btnGroup2.G = g;
    progdefaults.btnGroup2.B = b;

    r = 80; g = 80; b = 144;
    clr = fl_rgb_color(r,g,b);
    btnGroup3->color(clr);
    progdefaults.btnGroup3.R = r;
    progdefaults.btnGroup3.G = g;
    progdefaults.btnGroup3.B = b;

    r = 255; g = 255; b = 255;
    clr = fl_rgb_color(r,g,b);
    btnFkeyTextColor->color(clr);
    btnFkeyTextColor->redraw_label();
    progdefaults.btnFkeyTextColor.R = r;
    progdefaults.btnFkeyTextColor.G = g;
    progdefaults.btnFkeyTextColor.B = b;

    btnGroup1->labelcolor(clr);
    btnGroup1->redraw_label();

    btnGroup2->labelcolor(clr);
    btnGroup2->redraw_label();

    btnGroup3->labelcolor(clr);
    btnGroup3->redraw_label();

    colorize_macros();

progdefaults.changed = true;}
          xywh {285 72 75 20}
        }
      }
      Fl_Group {} {
        label {Rx/Tx} open
        xywh {5 30 365 156} hide
      } {
        Fl_Input RxText {
          xywh {15 44 165 36}
          code0 {RxText->value("Receive Text");}
          code1 {RxText->color(fl_rgb_color(progdefaults.RxColor.R, progdefaults.RxColor.G, progdefaults.RxColor.B));}
          code2 {RxText->textfont(progdefaults.RxFontnbr); RxText->textsize(progdefaults.RxFontsize); RxText->textcolor(progdefaults.RxFontcolor);}
          code3 {RxText->type(FL_MULTILINE_INPUT_WRAP);}
        }
        Fl_Button btnRxColor {
          label {Rx bkgnd}
          callback {uchar r, g, b;
    r = progdefaults.RxColor.R;
    g = progdefaults.RxColor.G;
    b = progdefaults.RxColor.B;

    if (!fl_color_chooser("Rx Color", r, g, b))
        return;

    progdefaults.RxColor.R = r;
    progdefaults.RxColor.G = g;
    progdefaults.RxColor.B = b;
    RxText->color(fl_rgb_color(r,g,b));
    ReceiveText->color(RxText->color());
    RxText->redraw();
    ReceiveText->redraw();

    progdefaults.changed = true;}
          xywh {189 51 75 21}
        }
        Fl_Button btnTxColor {
          label {Tx bkgnd}
          callback {uchar r, g, b;
    r = progdefaults.TxColor.R;
    g = progdefaults.TxColor.G;
    b = progdefaults.TxColor.B;

    if (!fl_color_chooser("Tx Color", r, g, b))
        return;

    progdefaults.TxColor.R = r;
    progdefaults.TxColor.G = g;
    progdefaults.TxColor.B = b;
    TxText->color(fl_rgb_color(r,g,b));
    TransmitText->color(TxText->color());
    TxText->redraw();
    TransmitText->redraw();

progdefaults.changed = true;}
          xywh {189 92 75 21}
        }
        Fl_Input TxText {
          xywh {15 87 165 37}
          code0 {TxText->value("Transmit Text");}
          code1 {TxText->color(fl_rgb_color(progdefaults.TxColor.R, progdefaults.TxColor.G, progdefaults.TxColor.B));}
          code2 {TxText->textfont(progdefaults.TxFontnbr); TxText->textsize(progdefaults.TxFontsize); TxText->textcolor(progdefaults.TxFontcolor);}
          code3 {TxText->type(FL_MULTILINE_INPUT_WRAP);}
        }
        Fl_Button btnRxFont {
          label {Rx font}
          callback {font_browser->fontNumber(progdefaults.RxFontnbr);
    font_browser->fontSize(progdefaults.RxFontsize);
    font_browser->fontColor(progdefaults.RxFontcolor);
    font_browser->fontFilter(Font_Browser::ALL_TYPES);
    font_browser->callback(cbRxFontBrowser);
font_browser->show();}
          xywh {274 51 75 21}
        }
        Fl_Button btnTxFont {
          label {Tx font}
          callback {font_browser->fontNumber(progdefaults.TxFontnbr);
    font_browser->fontSize(progdefaults.TxFontsize);
    font_browser->fontColor(progdefaults.TxFontcolor);
    font_browser->fontFilter(Font_Browser::ALL_TYPES);
    font_browser->callback(cbTxFontBrowser);
    font_browser->show();}
          xywh {274 92 75 21}
        }
        Fl_Button btnXMIT {
          label XMIT
          callback {choose_color(progdefaults.XMITcolor);
    btnXMIT->color( progdefaults.XMITcolor );
    btnXMIT->redraw();
    TransmitText->setFontColor(progdefaults.XMITcolor, FTextBase::XMIT);
    ReceiveText->setFontColor(progdefaults.XMITcolor, FTextBase::XMIT);

    progdefaults.changed = true;}
          tooltip {Sent chars in Rx/Tx pane} xywh {5 134 40 21} align 2
          code0 {btnXMIT->color(progdefaults.XMITcolor);}
        }
        Fl_Button btnCTRL {
          label CTRL
          callback {choose_color(progdefaults.CTRLcolor);
    btnCTRL->color( progdefaults.CTRLcolor );
    btnCTRL->redraw();
    TransmitText->setFontColor(progdefaults.CTRLcolor, FTextBase::CTRL);
    ReceiveText->setFontColor(progdefaults.CTRLcolor, FTextBase::CTRL);

    progdefaults.changed = true;}
          tooltip {Control chars in Rx/Tx pane} xywh {48 134 40 21} align 2
          code0 {btnCTRL->color(progdefaults.CTRLcolor);}
        }
        Fl_Button btnSKIP {
          label SKIP
          callback {choose_color(progdefaults.SKIPcolor);
    btnSKIP->color( progdefaults.SKIPcolor );
    btnSKIP->redraw();
    TransmitText->setFontColor(progdefaults.SKIPcolor, FTextBase::SKIP);
    ReceiveText->setFontColor(progdefaults.SKIPcolor, FTextBase::SKIP);

    progdefaults.changed = true;}
          tooltip {Skipped chars in Tx pane
(Tx on/off in CW)} xywh {92 134 40 21} align 2
          code0 {btnSKIP->color(progdefaults.SKIPcolor);}
        }
        Fl_Button btnALTR {
          label ALTR
          callback {choose_color(progdefaults.ALTRcolor);
    btnALTR->color( progdefaults.ALTRcolor );
    btnALTR->redraw();
    TransmitText->setFontColor(progdefaults.ALTRcolor, FTextBase::ALTR);
    ReceiveText->setFontColor(progdefaults.ALTRcolor, FTextBase::ALTR);

    progdefaults.changed = true;}
          tooltip {Alternate character color in Rx panelr} xywh {135 134 40 21} align 2
          code0 {btnALTR->color(progdefaults.ALTRcolor);}
        }
        Fl_Button btnSEL {
          label SEL
          callback {choose_color(progdefaults.RxTxSelectcolor);
btnSEL->color( progdefaults.RxTxSelectcolor );
btnSEL->redraw();
ReceiveText->color(
  fl_rgb_color(
    progdefaults.RxColor.R,
    progdefaults.RxColor.G,
    progdefaults.RxColor.B),
    progdefaults.RxTxSelectcolor);
TransmitText->color(
  fl_rgb_color(
    progdefaults.TxColor.R,
    progdefaults.TxColor.G,
    progdefaults.TxColor.B),
    progdefaults.RxTxSelectcolor);
    
progdefaults.changed = true;}
          tooltip {Selection background color in Rx Tx panels} xywh {179 134 39 21} align 2
          code0 {btnSEL->color(progdefaults.RxTxSelectcolor);}
        }
        Fl_Button btnNoTextColor {
          label System
          callback {uchar r, g, b;
    Fl_Color clr = FL_BACKGROUND2_COLOR;

    Fl::get_color(clr, r, g, b);

    progdefaults.TxFontcolor = FL_BLACK;
    progdefaults.RxFontcolor = FL_BLACK;
    progdefaults.XMITcolor = FL_RED;
    progdefaults.CTRLcolor = FL_DARK_GREEN;
    progdefaults.SKIPcolor = FL_BLUE;
    progdefaults.ALTRcolor = FL_DARK_MAGENTA;
    btnXMIT->color(progdefaults.XMITcolor);
    btnCTRL->color(progdefaults.CTRLcolor);
    btnSKIP->color(progdefaults.SKIPcolor);
    btnALTR->color(progdefaults.ALTRcolor);
    btnXMIT->redraw();
    btnCTRL->redraw();
    btnSKIP->redraw();
    btnALTR->redraw();

    progdefaults.RxColor.R = r;
    progdefaults.RxColor.G = g;
    progdefaults.RxColor.B = b;

    clr = fl_rgb_color(r,g,b);
    RxText->color(clr);
    RxText->textcolor(progdefaults.RxFontcolor);
    RxText->redraw();

    ReceiveText->color(clr);
    ReceiveText->setFontColor(progdefaults.RxFontcolor, FTextBase::RECV);
    ReceiveText->setFontColor(progdefaults.XMITcolor, FTextBase::XMIT);
    ReceiveText->setFontColor(progdefaults.CTRLcolor, FTextBase::CTRL);
    ReceiveText->setFontColor(progdefaults.SKIPcolor, FTextBase::SKIP);
    ReceiveText->setFontColor(progdefaults.ALTRcolor, FTextBase::ALTR);
    ReceiveText->redraw();

    progdefaults.TxColor.R = r;
    progdefaults.TxColor.G = g;
    progdefaults.TxColor.B = b;

    TxText->color(clr);
    TxText->textcolor(progdefaults.TxFontcolor);
    TxText->redraw();

    TransmitText->color(clr);
    TransmitText->setFontColor(progdefaults.TxFontcolor, FTextBase::RECV);
    TransmitText->setFontColor(progdefaults.XMITcolor, FTextBase::XMIT);
    TransmitText->setFontColor(progdefaults.CTRLcolor, FTextBase::CTRL);
    TransmitText->setFontColor(progdefaults.SKIPcolor, FTextBase::SKIP);
    TransmitText->setFontColor(progdefaults.ALTRcolor, FTextBase::ALTR);
    TransmitText->redraw();

    progdefaults.changed = true;}
          xywh {226 134 70 21}
        }
        Fl_Button btnTextDefaults {
          label Defaults
          callback {uchar r, g, b;
    Fl_Color clr;

    progdefaults.TxFontcolor = FL_BLACK;
    progdefaults.RxFontcolor = FL_BLACK;
    progdefaults.XMITcolor = FL_RED;
    progdefaults.CTRLcolor = FL_DARK_GREEN;
    progdefaults.SKIPcolor = FL_BLUE;
    progdefaults.ALTRcolor = FL_DARK_MAGENTA;
    btnXMIT->color(progdefaults.XMITcolor);
    btnCTRL->color(progdefaults.CTRLcolor);
    btnSKIP->color(progdefaults.SKIPcolor);
    btnALTR->color(progdefaults.ALTRcolor);
    btnXMIT->redraw();
    btnCTRL->redraw();
    btnSKIP->redraw();
    btnALTR->redraw();

    r = 255; g = 242; b = 190;
    progdefaults.RxColor.R = r;
    progdefaults.RxColor.G = g;
    progdefaults.RxColor.B = b;

    clr = fl_rgb_color(r,g,b);
    RxText->color(clr);
    RxText->textcolor(progdefaults.RxFontcolor);
    RxText->redraw();

    ReceiveText->color(clr);
    ReceiveText->setFontColor(progdefaults.RxFontcolor, FTextBase::RECV);
    ReceiveText->setFontColor(progdefaults.XMITcolor, FTextBase::XMIT);
    ReceiveText->setFontColor(progdefaults.CTRLcolor, FTextBase::CTRL);
    ReceiveText->setFontColor(progdefaults.SKIPcolor, FTextBase::SKIP);
    ReceiveText->setFontColor(progdefaults.ALTRcolor, FTextBase::ALTR);
    ReceiveText->redraw();

    r = 200; g = 235; b = 255;
    progdefaults.TxColor.R = r;
    progdefaults.TxColor.G = g;
    progdefaults.TxColor.B = b;

    clr = fl_rgb_color(r,g,b);
    TxText->color(clr);
    TxText->textcolor(progdefaults.TxFontcolor);
    TxText->redraw();

    TransmitText->color(clr);
    TransmitText->setFontColor(progdefaults.TxFontcolor, FTextBase::RECV);
    TransmitText->setFontColor(progdefaults.XMITcolor, FTextBase::XMIT);
    TransmitText->setFontColor(progdefaults.CTRLcolor, FTextBase::CTRL);
    TransmitText->setFontColor(progdefaults.SKIPcolor, FTextBase::SKIP);
    TransmitText->setFontColor(progdefaults.ALTRcolor, FTextBase::ALTR);
    TransmitText->redraw();

    progdefaults.changed = true;}
          xywh {300 134 70 21}
        }
      }
      Fl_Group {} {
        label Tabs open
        xywh {5 30 365 156} hide
      } {
        Fl_Button btnTabColor {
          label {Tab Color}
          callback {progdefaults.TabsColor = fl_show_colormap(progdefaults.TabsColor);
setTabColors();
progdefaults.changed = true;}
          xywh {90 77 75 21}
        }
        Fl_Button btnTabDefaultColor {
          label System
          callback {progdefaults.TabsColor = FL_BACKGROUND2_COLOR;
setTabColors();    
progdefaults.changed = true;}
          xywh {220 77 75 21}
        }
      }
      Fl_Group {} {
        label Buttons open
        xywh {5 30 365 156} hide
      } {
        Fl_Button btnSpotColor {
          label Spot
          callback {progdefaults.SpotColor = fl_show_colormap(progdefaults.SpotColor);
spotcolor->color(progdefaults.SpotColor);
spotcolor->redraw();
spot_selection_color();
progdefaults.changed = true;}
          xywh {51 51 70 21}
        }
        Fl_Button btnRxIDColor {
          label RxID
          callback {progdefaults.RxIDColor = fl_show_colormap(progdefaults.RxIDColor);
rxidcolor->color(progdefaults.RxIDColor);
rxidcolor->redraw();
rxid_selection_color();
progdefaults.changed = true;}
          xywh {51 86 70 21}
        }
        Fl_Button btnTxIDColor {
          label TxID
          callback {progdefaults.TxIDColor = fl_show_colormap(progdefaults.TxIDColor);
txidcolor->color(progdefaults.TxIDColor);
txidcolor->redraw();
txid_selection_color();
progdefaults.changed = true;}
          xywh {51 123 70 20}
        }
        Fl_Button btnTuneColor {
          label Tune
          callback {progdefaults.TuneColor = fl_show_colormap(progdefaults.TuneColor);
tunecolor->color(progdefaults.TuneColor);
tunecolor->redraw();
tune_selection_color();
progdefaults.changed = true;}
          xywh {51 159 70 21}
        }
        Fl_Button btnLkColor {
          label Lk
          callback {progdefaults.LkColor = fl_show_colormap(progdefaults.LkColor);
lockcolor->color(progdefaults.LkColor);
lockcolor->redraw();
xmtlock_selection_color();
progdefaults.changed = true;}
          xywh {162 51 70 21}
        }
        Fl_Button btnRevColor {
          label Rev
          callback {progdefaults.RevColor = fl_show_colormap(progdefaults.RevColor);
revcolor->color(progdefaults.RevColor);
revcolor->redraw();
rev_selection_color();
progdefaults.changed = true;}
          xywh {162 86 70 21}
        }
        Fl_Button btnXmtColor {
          label {T/R}
          callback {progdefaults.XmtColor = fl_show_colormap(progdefaults.XmtColor);
xmtcolor->color(progdefaults.XmtColor);
xmtcolor->redraw();
xmtrcv_selection_color();
progdefaults.changed = true;}
          xywh {162 122 70 20}
        }
        Fl_Button btnAfcColor {
          label AFC
          callback {progdefaults.AfcColor = fl_show_colormap(progdefaults.AfcColor);
afccolor->color(progdefaults.AfcColor);
afccolor->redraw();
afc_selection_color();
progdefaults.changed = true;}
          xywh {277 50 70 21}
        }
        Fl_Button btnSql1Color {
          label {SQL-1}
          callback {progdefaults.Sql1Color = fl_show_colormap(progdefaults.Sql1Color);
sql1color->color(progdefaults.Sql1Color);
sql1color->redraw();
sql_selection_color();
progdefaults.changed = true;}
          xywh {277 87 70 21}
        }
        Fl_Button btnSql2Color {
          label {SQL-2}
          callback {progdefaults.Sql2Color = fl_show_colormap(progdefaults.Sql2Color);
sql2color->color(progdefaults.Sql2Color);
sql2color->redraw();
sql_selection_color();
progdefaults.changed = true;}
          xywh {277 123 70 20}
        }
        Fl_Box spotcolor {
          xywh {32 52 18 19} box THIN_DOWN_BOX color 3
          code0 {o->color(progdefaults.SpotColor);}
        }
        Fl_Box rxidcolor {
          xywh {32 87 18 19} box THIN_DOWN_BOX
          code0 {o->color(progdefaults.RxIDColor);}
        }
        Fl_Box txidcolor {
          xywh {32 124 18 18} box THIN_DOWN_BOX
          code0 {o->color(progdefaults.TxIDColor);}
        }
        Fl_Box tunecolor {
          xywh {32 160 18 19} box THIN_DOWN_BOX
          code0 {o->color(progdefaults.TuneColor);}
        }
        Fl_Box lockcolor {
          xywh {142 51 18 19} box THIN_DOWN_BOX color 3
          code0 {o->color(progdefaults.LkColor);}
        }
        Fl_Box revcolor {
          xywh {142 87 18 19} box THIN_DOWN_BOX
          code0 {o->color(progdefaults.RevColor);}
        }
        Fl_Box xmtcolor {
          xywh {142 123 18 18} box THIN_DOWN_BOX
          code0 {o->color(progdefaults.XmtColor);}
        }
        Fl_Box afccolor {
          xywh {257 52 18 19} box THIN_DOWN_BOX color 3
          code0 {o->color(progdefaults.AfcColor);}
        }
        Fl_Box sql1color {
          xywh {257 88 18 19} box THIN_DOWN_BOX
          code0 {o->color(progdefaults.Sql1Color);}
        }
        Fl_Box sql2color {
          xywh {257 124 18 18} box THIN_DOWN_BOX
          code0 {o->color(progdefaults.Sql2Color);}
        }
        Fl_Box {} {
          label {Lighted button enabled colors}
          xywh {140 159 220 20} align 21
        }
      }
      Fl_Group {} {
        label SigLvl open
        xywh {5 28 365 156} hide
      } {
        Fl_Button btnLowSignal {
          label Low
          callback {progdefaults.LowSignal = fl_show_colormap(progdefaults.LowSignal);
lowcolor->color(progdefaults.LowSignal);
lowcolor->redraw();
progdefaults.changed = true;}
          xywh {102 73 70 21}
        }
        Fl_Box lowcolor {
          xywh {81 73 21 21} box DIAMOND_DOWN_BOX color 0
          code0 {o->color(progdefaults.LowSignal);}
        }
        Fl_Button btnHighSignal {
          label High
          callback {progdefaults.HighSignal = fl_show_colormap(progdefaults.HighSignal);
highcolor->color(progdefaults.HighSignal);
highcolor->redraw();
progdefaults.changed = true;}
          xywh {102 111 70 21}
        }
        Fl_Box highcolor {
          xywh {81 111 21 21} box DIAMOND_DOWN_BOX color 3
          code0 {o->color(progdefaults.HighSignal);}
        }
        Fl_Button btnNormalSignal {
          label Normal
          callback {progdefaults.NormSignal = fl_show_colormap(progdefaults.NormSignal);
normalcolor->color(progdefaults.NormSignal);
normalcolor->redraw();
progdefaults.changed = true;}
          xywh {225 73 70 21}
        }
        Fl_Box normalcolor {
          xywh {204 72 21 21} box DIAMOND_DOWN_BOX color 2
          code0 {o->color(progdefaults.NormSignal);}
        }
        Fl_Button btnOverSignal {
          label Over
          callback {progdefaults.OverSignal = fl_show_colormap(progdefaults.OverSignal);
overcolor->color(progdefaults.OverSignal);
overcolor->redraw();
progdefaults.changed = true;}
          xywh {225 111 70 21}
        }
        Fl_Box overcolor {
          xywh {204 111 21 21} box DIAMOND_DOWN_BOX color 1
          code0 {o->color(progdefaults.OverSignal);}
        }
        Fl_Box {} {
          label {Signal Level Colors}
          xywh {27 41 316 21}
        }
      }
      Fl_Group {} {
        label Log open
        xywh {0 30 375 155} hide
      } {
        Fl_Group {} {
          label {Logging Panel Controls} open
          xywh {1 33 372 65} box ENGRAVED_FRAME align 21
        } {
          Fl_Output LOGGINGdisplay {
            xywh {19 57 98 25}
            code0 {o->textfont(progdefaults.LOGGINGtextfont);o->textsize(progdefaults.LOGGINGtextsize);o->textcolor(progdefaults.LOGGINGtextcolor);}
            code1 {o->color(progdefaults.LOGGINGcolor);}
            code2 {o->value("W1HKJ");}
            code3 {o->redraw();}
          }
          Fl_Button btnLOGGING_color {
            label {Bg Color}
            callback {uchar r, g, b;
    Fl::get_color(progdefaults.LOGGINGcolor, r, g, b);

    if (!fl_color_chooser("Background", r, g, b))
        return;

    progdefaults.LOGGINGcolor = fl_rgb_color(r, g, b);
    
    LOGGINGdisplay->color(progdefaults.LOGGINGcolor);
    LOGGINGdisplay->redraw();

    LOGGING_colors_font();
    
    progdefaults.changed = true;}
            xywh {127 57 80 25}
          }
          Fl_Button btn_LOGGING_font {
            label Font
            callback {font_browser->fontNumber(progdefaults.LOGGINGtextfont);
font_browser->fontSize(progdefaults.LOGGINGtextsize);
font_browser->fontColor(progdefaults.LOGGINGtextcolor);
font_browser->fontFilter(Font_Browser::ALL_TYPES);
font_browser->callback(cbLOGGINGFontBrowser);
font_browser->show();}
            xywh {217 57 55 25}
          }
          Fl_Button btnLOGGINGdefault_colors_font {
            label Default
            callback {progdefaults.LOGGINGcolor = FL_BACKGROUND2_COLOR;
progdefaults.LOGGINGtextfont = (Fl_Font)0;
progdefaults.LOGGINGtextsize = 12;
progdefaults.LOGGINGtextcolor = FL_BLACK;

LOGGINGdisplay->color(progdefaults.LOGGINGcolor);
LOGGINGdisplay->textsize(progdefaults.LOGGINGtextsize);
LOGGINGdisplay->textcolor(progdefaults.LOGGINGtextcolor);
LOGGINGdisplay->textfont(progdefaults.LOGGINGtextfont);
LOGGINGdisplay->redraw();
    
LOGGING_colors_font();
    
progdefaults.changed = true;}
            xywh {283 57 80 25}
          }
        }
        Fl_Group {} {
          label {Logbook Dialog} open
          xywh {3 108 370 65} box ENGRAVED_FRAME align 21
        } {
          Fl_Output LOGBOOKdisplay {
            xywh {19 132 98 25}
            code0 {o->textfont(progdefaults.LOGGINGtextfont);o->textsize(progdefaults.LOGGINGtextsize);o->textcolor(progdefaults.LOGBOOKtextcolor);}
            code1 {o->color(progdefaults.LOGBOOKcolor);}
            code2 {o->value("14.070000");}
            code3 {o->redraw();}
          }
          Fl_Button btnLOGBOOK_color {
            label {Bg Color}
            callback {uchar r, g, b;
    Fl::get_color(progdefaults.LOGBOOKcolor, r, g, b);

    if (!fl_color_chooser("Background", r, g, b))
        return;

    progdefaults.LOGBOOKcolor = fl_rgb_color(r, g, b);
    
    LOGBOOKdisplay->color(progdefaults.LOGBOOKcolor);
    LOGBOOKdisplay->redraw();

    LOGBOOK_colors_font();
    
    progdefaults.changed = true;}
            xywh {127 132 80 25}
          }
          Fl_Button btn_LOGBOOK_font {
            label Font
            callback {font_browser->fontNumber(progdefaults.LOGBOOKtextfont);
font_browser->fontSize(progdefaults.LOGBOOKtextsize);
font_browser->fontColor(progdefaults.LOGBOOKtextcolor);
font_browser->fontFilter(Font_Browser::ALL_TYPES);
font_browser->callback(cbLOGBOOKFontBrowser);
font_browser->show();}
            xywh {217 132 55 25}
          }
          Fl_Button btnLOGBOOKdefault_colors_font {
            label Default
            callback {progdefaults.LOGBOOKcolor = FL_BACKGROUND2_COLOR;
progdefaults.LOGBOOKtextfont = (Fl_Font)0;
progdefaults.LOGBOOKtextsize = 12;
progdefaults.LOGBOOKtextcolor = FL_BLACK;

LOGBOOKdisplay->color(progdefaults.LOGBOOKcolor);
LOGBOOKdisplay->textsize(progdefaults.LOGBOOKtextsize);
LOGBOOKdisplay->textcolor(progdefaults.LOGBOOKtextcolor);
LOGBOOKdisplay->textfont(progdefaults.LOGBOOKtextfont);
LOGBOOKdisplay->redraw();
    
LOGBOOK_colors_font();
    
progdefaults.changed = true;}
            xywh {283 132 80 25}
          }
        }
      }
    }
  }
} 
